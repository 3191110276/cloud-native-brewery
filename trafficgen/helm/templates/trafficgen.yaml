apiVersion: v1
kind: ConfigMap
metadata:
  name: customization
  namespace: {{ .Release.Namespace }}
data:
  MIN_RANDOM_DELAY: "{{ .Values.min_random_delay }}"
  MAX_RANDOM_DELAY: "{{ .Values.max_random_delay }}"
  LAGSPIKE_PERCENTAGE: "{{ .Values.lagspike_percentage }}"
  INGRESS_DNS: "{{ .Values.ingress_dns }}"
  INGRESS_NS: "{{ .Values.ingress_ns }}"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Values.name }}
rules:
- apiGroups: [""]
  resources: ["*","services"]
  verbs: ["*","get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
subjects:
- kind: ServiceAccount
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ .Values.name }}
  apiGroup: rbac.authorization.k8s.io
---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  labels:
#    app: {{ .Values.name }}
#  name: {{ .Values.name }}
#  namespace: {{ .Release.Namespace }}
#spec:
#  replicas: {{ .Values.replicas }}
#  selector:
#    matchLabels:
#      app: {{ .Values.name }}
#  strategy: {}
#  template:
#    metadata:
#      labels:
#        app: {{ .Values.name }}
#    spec:
#      serviceAccountName: {{ .Values.name }}
#      automountServiceAccountToken: true
##      securityContext:
##        runAsUser: 10000
##        runAsGroup: 20000
##        fsGroup: 30000
#      containers:
#      - name: trafficgen
#        image: {{ .Values.registry }}/trafficgen-python:{{ .Values.version }}
#        imagePullPolicy: Always
#        volumeMounts:
#        - name: customization
#          mountPath: /etc/customization
##        securityContext:
##          runAsUser: 10001
##          allowPrivilegeEscalation: false
##        ports:
##        - name: http
##          containerPort: 80
##          protocol: TCP
##        - name: https
##          containerPort: 443
##          protocol: TCP
##        startupProbe:
##          periodSeconds: 5
##          failureThreshold: 40
##          httpGet:
##            path: /healthz
##            port: http
##        livenessProbe:
##          initialDelaySeconds: 5
##          periodSeconds: 2
##          failureThreshold: 4
##          httpGet:
##            path: /healthz
##            port: http
##        resources:
##          requests:
##            cpu: 250m
##            memory: 32Mi
##          limits:
##            memory: 32Mi
#      volumes:
#      - name: customization
#        configMap:
#          name: customization  
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: trafficgen
spec:
  schedule: "* * * * *"
  concurrencyPolicy: Allow
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 2
  #backoffLimit: 2
  startingDeadlineSeconds: 59
  jobTemplate:
    spec:
      parallelism: 10
      completions: 10
      template:
        spec:
          serviceAccountName: {{ .Values.name }}
          automountServiceAccountToken: true
          containers:
          - name: trafficgen
            image: {{ .Values.registry }}/trafficgen-python:{{ .Values.version }}
            imagePullPolicy: IfNotPresent #Always
            volumeMounts:
            - name: customization
              mountPath: /etc/customization
          volumes:
          - name: customization
            configMap:
              name: customization 
          restartPolicy: Never